{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":5745212,"sourceType":"datasetVersion","datasetId":3227413}],"dockerImageVersionId":30476,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/barramalikwibowo/hydro-plant-model?scriptVersionId=191902407\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import os\n\nimport tensorflow as tf\nfrom tensorflow.keras import Model, callbacks\nfrom tensorflow.keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.layers import (Dense, Dropout, GlobalAveragePooling2D,\n                                     Input)\nfrom tensorflow.keras.metrics import TopKCategoricalAccuracy\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.optimizers import Adam\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D,MaxPooling2D,Convolution2D,Activation,Flatten,Dense,Dropout,MaxPool2D,BatchNormalization\n\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-10T06:47:35.669611Z","iopub.execute_input":"2024-08-10T06:47:35.670083Z","iopub.status.idle":"2024-08-10T06:47:43.084228Z","shell.execute_reply.started":"2024-08-10T06:47:35.670038Z","shell.execute_reply":"2024-08-10T06:47:43.08331Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n","output_type":"stream"}]},{"cell_type":"code","source":"train_dir = '/kaggle/input/tes2plant/Valid/Train'\nval_dir = '/kaggle/input/tes2plant/Valid/Valid'\ntest_dir = '/kaggle/input/tes2plant/Valid/test'\n\ndisease = os.listdir(train_dir)\nprint(f'Jumlah class : {len(disease)}')","metadata":{"execution":{"iopub.status.busy":"2024-08-10T06:47:43.086052Z","iopub.execute_input":"2024-08-10T06:47:43.086724Z","iopub.status.idle":"2024-08-10T06:47:43.10118Z","shell.execute_reply.started":"2024-08-10T06:47:43.086693Z","shell.execute_reply":"2024-08-10T06:47:43.100231Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Jumlah class : 30\n","output_type":"stream"}]},{"cell_type":"code","source":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1/255,\n                                    shear_range = 0.2,\n                                    zoom_range = 0.2,\n                                    fill_mode = 'nearest',\n                                    rotation_range = 20,\n                                    width_shift_range = 0.2,\n                                    height_shift_range = 0.2,\n                                    horizontal_flip= True\n)\n\nvalidation_datagen = ImageDataGenerator(rescale = 1/255)\n\ntrain_generator = train_datagen.flow_from_directory(\n    train_dir,\n    target_size = (224,224),\n    batch_size = 32,\n    class_mode = 'categorical'\n)\n\nvalidation_generator = validation_datagen.flow_from_directory(\n    val_dir,\n    target_size = (224,224),\n    batch_size = 32,\n    class_mode = 'categorical'\n)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-10T06:47:43.106726Z","iopub.execute_input":"2024-08-10T06:47:43.107002Z","iopub.status.idle":"2024-08-10T06:48:07.009882Z","shell.execute_reply.started":"2024-08-10T06:47:43.106978Z","shell.execute_reply":"2024-08-10T06:48:07.008922Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Found 52149 images belonging to 30 classes.\nFound 13041 images belonging to 30 classes.\n","output_type":"stream"}]},{"cell_type":"code","source":"CNN = Sequential()\n\nCNN.add(Conv2D(64, kernel_size=(3,3), padding='same', input_shape = (224,224,3)))\nCNN.add(BatchNormalization())\nCNN.add(Activation('relu'))\nCNN.add(Conv2D(128, kernel_size=(3,3), padding='same', input_shape = (224,224,3)))\nCNN.add(BatchNormalization())\nCNN.add(Activation('relu'))\nCNN.add(MaxPool2D(pool_size=(3, 3)))\n\nCNN.add(Conv2D(128, kernel_size=(3,3), padding='same', input_shape = (224,224,3)))\nCNN.add(BatchNormalization())\nCNN.add(Activation('relu'))\nCNN.add(Conv2D(128, kernel_size=(3,3), padding='same', input_shape = (224,224,3)))\nCNN.add(BatchNormalization())\nCNN.add(Activation('relu'))\n\nCNN.add(Conv2D(256, kernel_size=(3,3), padding='same', input_shape = (224,224,3)))\nCNN.add(BatchNormalization())\nCNN.add(Activation('relu'))\nCNN.add(MaxPool2D(pool_size=(3, 3)))\n\nCNN.add(Conv2D(512, kernel_size=(3,3), padding='same', input_shape = (224,224,3)))\nCNN.add(BatchNormalization())\nCNN.add(Activation('relu'))\nCNN.add(MaxPool2D(pool_size=(3, 3)))\n\nCNN.add(Conv2D(512, kernel_size=(3,3), padding='same', input_shape = (224,224,3)))\nCNN.add(BatchNormalization())\nCNN.add(Activation('relu'))\n\nCNN.add(Conv2D(512, kernel_size=(3,3), padding='same', input_shape = (224,224,3)))\nCNN.add(BatchNormalization())\nCNN.add(Activation('relu'))\nCNN.add(MaxPool2D(pool_size=(3, 3)))\n\nCNN.add(Flatten())\nCNN.add(Dense(2048, activation='relu'))\nCNN.add(Dropout(0.5))\nCNN.add(Dense(2048, activation='relu'))\nCNN.add(Dropout(0.5))\nCNN.add(Dense(30, activation='softmax'))\n\nCNN.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-10T06:48:07.011033Z","iopub.execute_input":"2024-08-10T06:48:07.011365Z","iopub.status.idle":"2024-08-10T06:48:09.812783Z","shell.execute_reply.started":"2024-08-10T06:48:07.011326Z","shell.execute_reply":"2024-08-10T06:48:09.811806Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"Model: \"sequential\"\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n=================================================================\n conv2d (Conv2D)             (None, 224, 224, 64)      1792      \n                                                                 \n batch_normalization (BatchN  (None, 224, 224, 64)     256       \n ormalization)                                                   \n                                                                 \n activation (Activation)     (None, 224, 224, 64)      0         \n                                                                 \n conv2d_1 (Conv2D)           (None, 224, 224, 128)     73856     \n                                                                 \n batch_normalization_1 (Batc  (None, 224, 224, 128)    512       \n hNormalization)                                                 \n                                                                 \n activation_1 (Activation)   (None, 224, 224, 128)     0         \n                                                                 \n max_pooling2d (MaxPooling2D  (None, 74, 74, 128)      0         \n )                                                               \n                                                                 \n conv2d_2 (Conv2D)           (None, 74, 74, 128)       147584    \n                                                                 \n batch_normalization_2 (Batc  (None, 74, 74, 128)      512       \n hNormalization)                                                 \n                                                                 \n activation_2 (Activation)   (None, 74, 74, 128)       0         \n                                                                 \n conv2d_3 (Conv2D)           (None, 74, 74, 128)       147584    \n                                                                 \n batch_normalization_3 (Batc  (None, 74, 74, 128)      512       \n hNormalization)                                                 \n                                                                 \n activation_3 (Activation)   (None, 74, 74, 128)       0         \n                                                                 \n conv2d_4 (Conv2D)           (None, 74, 74, 256)       295168    \n                                                                 \n batch_normalization_4 (Batc  (None, 74, 74, 256)      1024      \n hNormalization)                                                 \n                                                                 \n activation_4 (Activation)   (None, 74, 74, 256)       0         \n                                                                 \n max_pooling2d_1 (MaxPooling  (None, 24, 24, 256)      0         \n 2D)                                                             \n                                                                 \n conv2d_5 (Conv2D)           (None, 24, 24, 512)       1180160   \n                                                                 \n batch_normalization_5 (Batc  (None, 24, 24, 512)      2048      \n hNormalization)                                                 \n                                                                 \n activation_5 (Activation)   (None, 24, 24, 512)       0         \n                                                                 \n max_pooling2d_2 (MaxPooling  (None, 8, 8, 512)        0         \n 2D)                                                             \n                                                                 \n conv2d_6 (Conv2D)           (None, 8, 8, 512)         2359808   \n                                                                 \n batch_normalization_6 (Batc  (None, 8, 8, 512)        2048      \n hNormalization)                                                 \n                                                                 \n activation_6 (Activation)   (None, 8, 8, 512)         0         \n                                                                 \n conv2d_7 (Conv2D)           (None, 8, 8, 512)         2359808   \n                                                                 \n batch_normalization_7 (Batc  (None, 8, 8, 512)        2048      \n hNormalization)                                                 \n                                                                 \n activation_7 (Activation)   (None, 8, 8, 512)         0         \n                                                                 \n max_pooling2d_3 (MaxPooling  (None, 2, 2, 512)        0         \n 2D)                                                             \n                                                                 \n flatten (Flatten)           (None, 2048)              0         \n                                                                 \n dense (Dense)               (None, 2048)              4196352   \n                                                                 \n dropout (Dropout)           (None, 2048)              0         \n                                                                 \n dense_1 (Dense)             (None, 2048)              4196352   \n                                                                 \n dropout_1 (Dropout)         (None, 2048)              0         \n                                                                 \n dense_2 (Dense)             (None, 30)                61470     \n                                                                 \n=================================================================\nTotal params: 15,028,894\nTrainable params: 15,024,414\nNon-trainable params: 4,480\n_________________________________________________________________\n","output_type":"stream"}]},{"cell_type":"code","source":"CNN.compile(optimizer=tf.keras.optimizers.Adam(),\n              loss='categorical_crossentropy',\n              metrics=['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-10T06:48:09.814109Z","iopub.execute_input":"2024-08-10T06:48:09.814426Z","iopub.status.idle":"2024-08-10T06:48:09.843862Z","shell.execute_reply.started":"2024-08-10T06:48:09.814401Z","shell.execute_reply":"2024-08-10T06:48:09.842691Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"early_stopping_cb = callbacks.EarlyStopping(monitor=\"val_loss\", patience=3)\nreduce_lr = callbacks.ReduceLROnPlateau(monitor=\"val_loss\",  \n                                              factor=0.2, \n                                              patience=2,\n                                              verbose=1, \n                                              min_lr=1e-7)\n\ncheckpoint_path = \"./Checkpoint/\"\nmodel_checkpoint = callbacks.ModelCheckpoint(checkpoint_path,\n                                                      save_weights_only=True,\n                                                      save_best_only=True,\n                                                      monitor=\"val_loss\")\n\ninitial_epochs = 15\n\nhistory = CNN.fit(train_generator,\n                    epochs=initial_epochs,\n                    validation_data=validation_generator,\n                    callbacks=[early_stopping_cb, model_checkpoint, reduce_lr])","metadata":{"execution":{"iopub.status.busy":"2024-08-10T06:48:09.845422Z","iopub.execute_input":"2024-08-10T06:48:09.845836Z","iopub.status.idle":"2024-08-10T09:47:02.777805Z","shell.execute_reply.started":"2024-08-10T06:48:09.845799Z","shell.execute_reply":"2024-08-10T09:47:02.776958Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"Epoch 1/15\n1630/1630 [==============================] - 942s 569ms/step - loss: 2.1733 - accuracy: 0.3191 - val_loss: 2.5243 - val_accuracy: 0.3602 - lr: 0.0010\nEpoch 2/15\n1630/1630 [==============================] - 729s 447ms/step - loss: 0.9959 - accuracy: 0.6694 - val_loss: 1.6067 - val_accuracy: 0.5987 - lr: 0.0010\nEpoch 3/15\n1630/1630 [==============================] - 733s 450ms/step - loss: 0.5689 - accuracy: 0.8192 - val_loss: 1.8055 - val_accuracy: 0.6174 - lr: 0.0010\nEpoch 4/15\n1630/1630 [==============================] - 731s 449ms/step - loss: 0.3860 - accuracy: 0.8783 - val_loss: 0.4975 - val_accuracy: 0.8918 - lr: 0.0010\nEpoch 5/15\n1630/1630 [==============================] - 673s 413ms/step - loss: 0.3120 - accuracy: 0.9032 - val_loss: 0.3189 - val_accuracy: 0.9064 - lr: 0.0010\nEpoch 6/15\n1630/1630 [==============================] - 670s 411ms/step - loss: 0.2660 - accuracy: 0.9168 - val_loss: 0.7271 - val_accuracy: 0.8331 - lr: 0.0010\nEpoch 7/15\n1630/1630 [==============================] - 671s 411ms/step - loss: 0.2327 - accuracy: 0.9286 - val_loss: 0.3020 - val_accuracy: 0.9127 - lr: 0.0010\nEpoch 8/15\n1630/1630 [==============================] - 662s 406ms/step - loss: 0.2165 - accuracy: 0.9349 - val_loss: 0.2759 - val_accuracy: 0.9229 - lr: 0.0010\nEpoch 9/15\n1630/1630 [==============================] - 666s 408ms/step - loss: 0.1860 - accuracy: 0.9427 - val_loss: 0.4558 - val_accuracy: 0.8865 - lr: 0.0010\nEpoch 10/15\n1630/1630 [==============================] - ETA: 0s - loss: 0.1798 - accuracy: 0.9459\nEpoch 10: ReduceLROnPlateau reducing learning rate to 0.00020000000949949026.\n1630/1630 [==============================] - 675s 414ms/step - loss: 0.1798 - accuracy: 0.9459 - val_loss: 0.4873 - val_accuracy: 0.8720 - lr: 0.0010\nEpoch 11/15\n1630/1630 [==============================] - 726s 445ms/step - loss: 0.0799 - accuracy: 0.9727 - val_loss: 0.0426 - val_accuracy: 0.9834 - lr: 2.0000e-04\nEpoch 12/15\n1630/1630 [==============================] - 719s 441ms/step - loss: 0.0658 - accuracy: 0.9769 - val_loss: 0.0355 - val_accuracy: 0.9875 - lr: 2.0000e-04\nEpoch 13/15\n1630/1630 [==============================] - 734s 450ms/step - loss: 0.0610 - accuracy: 0.9781 - val_loss: 0.0561 - val_accuracy: 0.9792 - lr: 2.0000e-04\nEpoch 14/15\n1630/1630 [==============================] - ETA: 0s - loss: 0.0578 - accuracy: 0.9797\nEpoch 14: ReduceLROnPlateau reducing learning rate to 4.0000001899898055e-05.\n1630/1630 [==============================] - 718s 441ms/step - loss: 0.0578 - accuracy: 0.9797 - val_loss: 0.0376 - val_accuracy: 0.9863 - lr: 2.0000e-04\nEpoch 15/15\n1630/1630 [==============================] - 684s 419ms/step - loss: 0.0444 - accuracy: 0.9839 - val_loss: 0.0302 - val_accuracy: 0.9883 - lr: 4.0000e-05\n","output_type":"stream"}]},{"cell_type":"code","source":"CNN.save('./CNNmodif.h5')\nCNN.save('./CNNmodif')\nCNN.save('./CNNmodif.tflite')","metadata":{"execution":{"iopub.status.busy":"2024-08-10T09:47:02.779168Z","iopub.execute_input":"2024-08-10T09:47:02.779528Z","iopub.status.idle":"2024-08-10T09:47:12.631112Z","shell.execute_reply.started":"2024-08-10T09:47:02.779497Z","shell.execute_reply":"2024-08-10T09:47:12.630101Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"hist = history.history\ndef show_plt(type):\n    if type == 1:\n        plt.plot(hist[\"accuracy\"], label=\"accuracy\")\n        plt.plot(hist[\"val_accuracy\"], label=\"val_accuracy\")\n        plt.ylabel(\"Aaccuracy\")\n        plt.xlabel(\"Epochs #\")\n        plt.legend()\n        plt.show()\n    else:\n        plt.plot(hist[\"loss\"], label=\"loss\")\n        plt.plot(hist[\"val_loss\"], label=\"val_loss\")\n        plt.ylabel(\"Losss\")\n        plt.xlabel(\"Epochs #\")\n        plt.legend()\n        plt.show()\n        \nshow_plt(1)\nshow_plt(0)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T09:47:12.632955Z","iopub.execute_input":"2024-08-10T09:47:12.633321Z","iopub.status.idle":"2024-08-10T09:47:13.12966Z","shell.execute_reply.started":"2024-08-10T09:47:12.633285Z","shell.execute_reply":"2024-08-10T09:47:13.128671Z"},"trusted":true},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"class_dict = train_generator.class_indices\nli = list(class_dict.keys())\nprint(li)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T09:47:13.133145Z","iopub.execute_input":"2024-08-10T09:47:13.133476Z","iopub.status.idle":"2024-08-10T09:47:13.139496Z","shell.execute_reply.started":"2024-08-10T09:47:13.13345Z","shell.execute_reply":"2024-08-10T09:47:13.137727Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"['Blueberry___healthy', 'Blueberry_rust', 'Chilli_gemini', 'Chilli_healthy', 'Chilli_mosaic', 'Cucumber_blight', 'Cucumber_healthy', 'Grape___Black_rot', 'Grape___Esca_(Black_Measles)', 'Grape___Leaf_blight_(Isariopsis_Leaf_Spot)', 'Grape___healthy', 'Lettuce_bacterial', 'Lettuce_downy', 'Lettuce_healthy', 'Lettuce_powdery', 'Lettuce_septoria', 'Pepper,_bell___Bacterial_spot', 'Pepper,_bell___healthy', 'Strawberry___Leaf_scorch', 'Strawberry___healthy', 'Tomato___Bacterial_spot', 'Tomato___Early_blight', 'Tomato___Late_blight', 'Tomato___Leaf_Mold', 'Tomato___Septoria_leaf_spot', 'Tomato___Spider_mites Two-spotted_spider_mite', 'Tomato___Target_Spot', 'Tomato___Tomato_Yellow_Leaf_Curl_Virus', 'Tomato___Tomato_mosaic_virus', 'Tomato___healthy']\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\n#confusion Matrix\nfrom sklearn.metrics import classification_report, confusion_matrix\ny_pred = CNN.predict(validation_generator)\n\ny_pred = np.argmax(y_pred, axis=1)\nprint('Confusion Matrix')\nprint(confusion_matrix(validation_generator.classes, y_pred))\nprint('Classification Report')\ntarget_names =li ## ['Peach___Bacterial_spot', 'Grape___Black_rot', 'Tomato___Tomato_Yellow_Leaf_Curl_Virus']\nprint(classification_report(validation_generator.classes, y_pred, target_names=target_names))","metadata":{"execution":{"iopub.status.busy":"2024-08-10T09:47:13.141113Z","iopub.execute_input":"2024-08-10T09:47:13.14168Z","iopub.status.idle":"2024-08-10T09:47:43.078742Z","shell.execute_reply.started":"2024-08-10T09:47:13.141636Z","shell.execute_reply":"2024-08-10T09:47:43.077604Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"408/408 [==============================] - 29s 71ms/step\nConfusion Matrix\n[[19 20 13 10 10 17 10 20 16 17 12  7 18 16 17 18 18 16 15 23 12 16 11 17\n  15 16 17  7 13 18]\n [11  7  4 11  6 15 17 14 12  9 15  9 14 16 19 15 15 16 16 16 11  9 14 11\n  15 17 11 20 16 18]\n [ 2 11  6  2  1  7  7  9  7 10  3  9  4  8 10 11 10  9  4  9  9  8  9  9\n   8  9  9  9 10  3]\n [ 5  2  5  4  7  5  9  7 11 13 11  8 12 11 11 11  8 18 10  5  9 11 15  7\n  10  9  8 10  9  9]\n [ 7  6  5  3  0  7  6  6  9  6  9  7 11  6 12 10  4  8  7 10  7  8  4  4\n  14 10  5 12  9 12]\n [16 14  4 11  4  9 12 20 17 10 11 20  7 17 20 14 15 22 13 14 11 16 13  8\n  10 10 13 21 13 17]\n [10 14  6  6 10 19 20 12 18 18  8 15 10 11 22 11 10 12 11 18 13 16 12  8\n  14  9 19 15 12 14]\n [19 16 12 12  7  7 17 22 21 12 19 10 19 13 19 20 23 14 14 12 22 19 16 12\n  15 11 16 23 15 15]\n [24 11  8 11 15 11 12 18 13 18 16  8 21 17 16 26 14 16 14 21  9 11 17 21\n  23 21 18 17 21 12]\n [16 18  9  8  8 10  7 18 16 17 19 10 16 21 18 18 15 14 12 15  7 15 14 16\n  18 11 15 19 15 15]\n [17 13  7  7  6 11 12 15 14 17 13  7 27 14 16 22 12 21 12  8 11 12 21 17\n  12 13 15 16 10 25]\n [15 14 10  6  7  8 10 27 11 10 11  6 10 11 17 22 19 13 14 17 15 10 15 13\n  14 13 24 13 16 19]\n [22 20  7  9  4 16 11 18 22 15 15 14 14 19 24 27 21 20 12 12 16 13 12 17\n  19 18 15 17 15 20]\n [ 9 15  7  9 11 21  9 12 18 18 12 13 14 24 13 13 17 22 25 13 22 23 20 25\n  14 13 17 18 16 19]\n [25 14 11 12  7 17 20 18 12 15 22 17 18 19 22 28 19 13 17 16 13 15 12 29\n  14 23 13 12 17 16]\n [20 16  9 12  4 15 15 17 17 12 20 10 19 18 20 27 20 23 20 16 19 20 18 29\n  18 19 13 21 21 22]\n [18 16 10  8 14 21 10 14 21 17  9 17 13 15 15 18 16 14 21 16 16 17 12 17\n  17 19 12 23 18 24]\n [19 14  8 10 11 14 12 15 14 22 23 13 24 25 18 20 19 12 20 18 16 22 14 22\n  10 11 14 15 20 22]\n [14 10  3 18  8 13 12 15 17 18 15 11 17 14 16 15 18 21 12 15 12 15 11 20\n  17 21 17 12 11 26]\n [12 25  3  9  8 13 15 17 19 10 13 14 21 14 15 16 17 21 17 16 16 16 21 12\n  13 12 18 23 13 17]\n [10 12  5  7  7 12  7 11 16 18  9 21 23 16 19 18  8 19 10 20 13 17 23  9\n  13 10 18 20 15 19]\n [18 11  6  9  9 15 24 13 24 16 15 13 14 14 28 20 22 18 10  9 19 15 17 25\n  15 12 17 23 13 16]\n [15 16  8  9  7 12 15 13 20 17 17 15 21 19 14 21 12 12 19 19 14 17 16 15\n  19 19 11 16 19 16]\n [17 14 10  9  9 10 12 15 13 18 25 10 15 15 13 23 18 18 17 14 21 23 19 15\n  18 15 15 16 14 19]\n [16 11  7  6  6 11 14 15 19 12 18 10 15 19 17 24 15 15 15 25 10 21 12 15\n  12 21 17  8 10 20]\n [11 12  9  8  5 14 12 22 12 15  9 13 18 17 14 23 19 13 13 15 19 15 27 10\n  19 19 17 16 13  6]\n [17 12  5  7  9 19 18 15 15 13 15 13 15 17 12 20 18 14 19 22 19 21 13 19\n  19  6 18 17 15 15]\n [14  9  9 11  6 17 17 16 21 16 13 18 24 15 13 21 25 20 19 19 10 17 16 18\n  20 10 20 12 25 19]\n [22 10 10 13  8 20 14 18 12 14 11 10 10 25 17 18 11 21 19 13 20 17 14 16\n  12 20  9 19 12 13]\n [13 16  6 13 10 16 17 17 26  9 13 16 20 16 21 26 18 21 16 12 13 18 15 13\n  10 15 15 18 23 19]]\nClassification Report\n                                               precision    recall  f1-score   support\n\n                          Blueberry___healthy       0.04      0.04      0.04       454\n                               Blueberry_rust       0.02      0.02      0.02       399\n                                Chilli_gemini       0.03      0.03      0.03       222\n                               Chilli_healthy       0.01      0.01      0.01       270\n                                Chilli_mosaic       0.00      0.00      0.00       224\n                              Cucumber_blight       0.02      0.02      0.02       402\n                             Cucumber_healthy       0.05      0.05      0.05       393\n                            Grape___Black_rot       0.05      0.05      0.05       472\n                 Grape___Esca_(Black_Measles)       0.03      0.03      0.03       480\n   Grape___Leaf_blight_(Isariopsis_Leaf_Spot)       0.04      0.04      0.04       430\n                              Grape___healthy       0.03      0.03      0.03       423\n                            Lettuce_bacterial       0.02      0.01      0.02       410\n                                Lettuce_downy       0.03      0.03      0.03       484\n                              Lettuce_healthy       0.05      0.05      0.05       482\n                              Lettuce_powdery       0.04      0.04      0.04       506\n                             Lettuce_septoria       0.05      0.05      0.05       530\n                Pepper,_bell___Bacterial_spot       0.03      0.03      0.03       478\n                       Pepper,_bell___healthy       0.02      0.02      0.02       497\n                     Strawberry___Leaf_scorch       0.03      0.03      0.03       444\n                         Strawberry___healthy       0.03      0.04      0.04       456\n                      Tomato___Bacterial_spot       0.03      0.03      0.03       425\n                        Tomato___Early_blight       0.03      0.03      0.03       480\n                         Tomato___Late_blight       0.04      0.03      0.03       463\n                           Tomato___Leaf_Mold       0.03      0.03      0.03       470\n                  Tomato___Septoria_leaf_spot       0.03      0.03      0.03       436\nTomato___Spider_mites Two-spotted_spider_mite       0.04      0.04      0.04       435\n                         Tomato___Target_Spot       0.04      0.04      0.04       457\n       Tomato___Tomato_Yellow_Leaf_Curl_Virus       0.02      0.02      0.02       490\n                 Tomato___Tomato_mosaic_virus       0.03      0.03      0.03       448\n                             Tomato___healthy       0.04      0.04      0.04       481\n\n                                     accuracy                           0.03     13041\n                                    macro avg       0.03      0.03      0.03     13041\n                                 weighted avg       0.03      0.03      0.03     13041\n\n","output_type":"stream"}]},{"cell_type":"code","source":"import os\nfrom PIL import Image\nimport numpy as np\nfrom keras.models import load_model\n# Load the trained model\nmodel = CNN\n\n# Define the image size and preprocessing function\nimg_size = (224, 224)\ndef preprocess_image(img_path):\n    img = Image.open(img_path).convert('RGB')\n    img = img.resize(img_size)\n    img = np.array(img) / 255.0\n    img = np.expand_dims(img, axis=0)\n    return img\n\n# Set the path to the image folder\nimg_folder = test_dir\nclass_names = list(train_generator.class_indices.keys())\n# Loop through all the images in the folder and make predictions\nfor filename in os.listdir(img_folder):\n    img_path = os.path.join(img_folder, filename)\n    img = preprocess_image(img_path)\n    pred = model.predict(img)\n    class_idx = np.argmax(pred)\n    class_name = class_names[class_idx]\n    print(f'Image: {filename}, Class: {class_name}')","metadata":{"execution":{"iopub.status.busy":"2024-08-10T09:47:43.080058Z","iopub.execute_input":"2024-08-10T09:47:43.080377Z","iopub.status.idle":"2024-08-10T09:47:45.583029Z","shell.execute_reply.started":"2024-08-10T09:47:43.08035Z","shell.execute_reply":"2024-08-10T09:47:45.581996Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"1/1 [==============================] - 0s 393ms/step\nImage: TomatoEarlyBlight6.JPG, Class: Tomato___Early_blight\n1/1 [==============================] - 0s 22ms/step\nImage: TomatoYellowCurlVirus4.JPG, Class: Tomato___Tomato_Yellow_Leaf_Curl_Virus\n1/1 [==============================] - 0s 24ms/step\nImage: TomatoYellowCurlVirus6.JPG, Class: Tomato___Tomato_Yellow_Leaf_Curl_Virus\n1/1 [==============================] - 0s 23ms/step\nImage: Chilli_gemini.png, Class: Chilli_gemini\n1/1 [==============================] - 0s 24ms/step\nImage: Chilli_healtty.png, Class: Chilli_healthy\n1/1 [==============================] - 0s 25ms/step\nImage: TomatoYellowCurlVirus5.JPG, Class: Tomato___Tomato_Yellow_Leaf_Curl_Virus\n1/1 [==============================] - 0s 23ms/step\nImage: Cucumber_healthy (2).png, Class: Blueberry_rust\n1/1 [==============================] - 0s 24ms/step\nImage: TomatoYellowCurlVirus3.JPG, Class: Tomato___Tomato_Yellow_Leaf_Curl_Virus\n1/1 [==============================] - 0s 24ms/step\nImage: TomatoEarlyBlight3.JPG, Class: Tomato___Early_blight\n1/1 [==============================] - 0s 22ms/step\nImage: Cucumber_healthy (1).png, Class: Chilli_healthy\n1/1 [==============================] - 0s 22ms/step\nImage: TomatoEarlyBlight5.JPG, Class: Tomato___Early_blight\n1/1 [==============================] - 0s 21ms/step\nImage: TomatoHealthy2.JPG, Class: Tomato___healthy\n1/1 [==============================] - 0s 24ms/step\nImage: Blueberry_rust.png, Class: Strawberry___Leaf_scorch\n1/1 [==============================] - 0s 22ms/step\nImage: bb_rust.png, Class: Grape___Black_rot\n1/1 [==============================] - 0s 23ms/step\nImage: TomatoEarlyBlight2.JPG, Class: Tomato___Early_blight\n1/1 [==============================] - 0s 22ms/step\nImage: rapsber.png, Class: Strawberry___Leaf_scorch\n1/1 [==============================] - 0s 23ms/step\nImage: TomatoYellowCurlVirus2.JPG, Class: Tomato___Tomato_Yellow_Leaf_Curl_Virus\n1/1 [==============================] - 0s 21ms/step\nImage: ras.png, Class: Blueberry_rust\n1/1 [==============================] - 0s 23ms/step\nImage: TomatoEarlyBlight4.JPG, Class: Tomato___Early_blight\n1/1 [==============================] - 0s 24ms/step\nImage: TomatoHealthy3.JPG, Class: Tomato___healthy\n1/1 [==============================] - 0s 23ms/step\nImage: belpper_bvac.png, Class: Blueberry_rust\n1/1 [==============================] - 0s 23ms/step\nImage: TomatoHealthy1.JPG, Class: Tomato___healthy\n1/1 [==============================] - 0s 24ms/step\nImage: TomatoYellowCurlVirus1.JPG, Class: Tomato___Tomato_Yellow_Leaf_Curl_Virus\n1/1 [==============================] - 0s 21ms/step\nImage: Strawberry_sorch.png, Class: Strawberry___Leaf_scorch\n1/1 [==============================] - 0s 23ms/step\nImage: Cucumber_blight.png, Class: Cucumber_blight\n1/1 [==============================] - 0s 23ms/step\nImage: berlpper_bac.png, Class: Cucumber_blight\n1/1 [==============================] - 0s 23ms/step\nImage: TomatoEarlyBlight1.JPG, Class: Tomato___Early_blight\n1/1 [==============================] - 0s 22ms/step\nImage: TomatoHealthy4.JPG, Class: Tomato___healthy\n","output_type":"stream"}]},{"cell_type":"code","source":"print(pred)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T09:47:45.584431Z","iopub.execute_input":"2024-08-10T09:47:45.584762Z","iopub.status.idle":"2024-08-10T09:47:45.591654Z","shell.execute_reply.started":"2024-08-10T09:47:45.584734Z","shell.execute_reply":"2024-08-10T09:47:45.590547Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"[[1.6443959e-12 3.3296698e-15 1.4389228e-16 1.6664011e-14 5.7026520e-17\n  9.9750339e-18 4.7304183e-12 5.4217723e-21 1.7943096e-17 3.4951418e-21\n  1.2043943e-17 1.8978400e-15 2.9620487e-13 1.0311851e-14 5.1510917e-13\n  1.0943986e-17 1.1356787e-17 1.2427410e-11 1.3693884e-17 1.2384782e-13\n  4.7941209e-15 6.1452590e-16 3.7083797e-10 1.0056670e-12 3.2116555e-14\n  9.8401072e-11 8.8681332e-08 3.4621150e-20 3.7404277e-12 9.9999988e-01]]\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}